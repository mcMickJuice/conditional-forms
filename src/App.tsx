import "./App.css";
import { Form } from "./Form";
import { FormContextProvider } from "./FormProvider";
import type { FormDefinition, RuleDefinition } from "./types";
// this list of form definitions comes from the backend
const definitions: FormDefinition[] = [
  { type: "text", path: "first-input" },
  { type: "text", path: "second-input" },
  { type: "select", path: "first-select" },
];

// this list of rule definitoins would come from the backend and would be part of the content-type definition
const rules: RuleDefinition[] = [
  // these id values can be uuids generated by the client at time of rule creation. They just need to be unique
  { type: "subject", id: "1", path: "first-input" },
  {
    type: "equals",
    id: "2",
    parentId: "1",
    path: "second-input",
    value: "foo",
  },
  { type: "subject", id: "4", path: "second-input" },
  { type: "and", id: "6", parentId: "4" },
  {
    type: "equals",
    id: "7",
    parentId: "6",
    path: "first-select",
    value: "Second",
  },
  {
    type: "equals",
    id: "8",
    parentId: "6",
    path: "first-input",
    value: "bar",
  },
];
function App() {
  return (
    <>
      <div>
        <div>
          <h2>Dynamic rules</h2>
          <ul>
            <li>first-input is required if second-input value == foo</li>
            <li>
              second-input is required if first-select value == Second AND
              first-input == bar
            </li>
          </ul>
        </div>
        <FormContextProvider rules={rules} formDefinitions={definitions}>
          <Form formDefinitions={definitions} />
        </FormContextProvider>
      </div>
    </>
  );
}

export default App;
